[{"/home/nwhaley/Workspace/movieLibrary/movielibrary/src/index.js":"1","/home/nwhaley/Workspace/movieLibrary/movielibrary/src/App.js":"2","/home/nwhaley/Workspace/movieLibrary/movielibrary/src/components/movieList.jsx":"3","/home/nwhaley/Workspace/movieLibrary/movielibrary/src/components/movieEntry.jsx":"4"},{"size":149,"mtime":1573488771743,"results":"5","hashOfConfig":"6"},{"size":4051,"mtime":1610850560223,"results":"7","hashOfConfig":"6"},{"size":381,"mtime":1573614493443,"results":"8","hashOfConfig":"6"},{"size":415,"mtime":1573616295632,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1rvf2em",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/home/nwhaley/Workspace/movieLibrary/movielibrary/src/index.js",[],["21","22"],"/home/nwhaley/Workspace/movieLibrary/movielibrary/src/App.js",["23"],"import React from 'react';\nimport MovieList from './components/movieList.jsx';\nimport MovieEntry from './components/movieEntry.jsx'\nconst axios = require('axios');\n\n\n\n\nconst appStyle = {\n  backgroundColor: 'black',\n  borderRadius: '5px',\n  color: 'red',\n  alignContent: 'center',\n  maxWidth: '50%'\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      movies: [{name: 'default', year: '', genre: ''}, {name: '', year: '', genre: ''}, {name: '', year: '', genre: ''}],\n      randomMovie: {name: '', year: '', genre: ''}\n    }\n\n    this.selectRandom = this.selectRandom.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.addMovie = this.addMovie.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n  }\n\n\n\ncomponentDidMount() {\n    axios.get('/list')\n    .then(res => {\n\n      let split = res.data.split('-')\n      console.log(split)\n      let newList = []\n      for(let i = 0; i < split.length; i++){\n        let content = split[i].slice(1, split[i].length - 1)\n        let splitContent = content.split(',')\n        let obj = {}\n        for(let x = 0; x < splitContent.length; x++){\n          let halves = splitContent[x].split(':')\n          obj[halves[0].replace(/\"/, '').trim()] = halves[1].replace(/\"/, '').trim()\n        }\n        newList.push(obj)\n      }\n\n\n      this.setState((state) =>\n      ({\n        movies: newList\n        })\n      );\n\n\n    })\n\n    .catch(err => console.log(err))\n\n\n}\n\n\n\nselectRandom(){\n\n  this.setState((state) => ({\n    randomMovie : this.state.movies[Math.floor(Math.random() * Math.floor(this.state.movies.length - 1))]\n }))\n\n  }\n\n\naddMovie = async () => {\n  let response = await fetch('/list');\n  let body = await response.json();\n  if(response.status !== 200) {\n    throw Error(body.message)\n  }\n\n  return body\n}\n\n\n\n\nhandleSubmit(e){\n  e.preventDefault()\n  let newFilm = (document.getElementById('newTitle').value).replace(/[&+()$~%.\"*?<>]/g,'');\n  let newYear = (document.getElementById('newYear').value).replace(/[&+()$~%.\"*?<>]/g,'');\n  let newGenre = (document.getElementById('newGenre').value).replace(/[&+()$~%.\"*?<>]/g,'');\n\n  let newEntry = {\n    name: newFilm,\n    genre: newGenre,\n    year: newYear\n  }\n\n\n\n\n  let originalList = this.state.movies\n  originalList.push(newEntry)\n  console.log(originalList)\n  this.setState((state) => ({\n    movies: originalList\n  }))\n\n}\n\n\n  render() {\n\n    if(this.state.movies[0].name !== 'default'){\n    let stringList = []\n\n    for(let i = 0; i < this.state.movies.length; i++){\n      stringList.push(JSON.stringify(this.state.movies[i]))\n    }\n\n    axios({\n      method: 'post',\n      url: '/updateList',\n      data: stringList.join('-'),\n      config: { headers: {'Content-Type': 'multipart/form-data' }}\n      })\n    .then((response) => {\n      console.log(response.data);\n    }, (error) => {\n      console.log(error);\n    });\n\n\n  }\n\n\nreturn (\n<div className=\"Entry\" style={appStyle}>\n      <header>Movie List</header>\n\n        <div>Add to collection</div>\n    <div>\n    <form class=\"movie-submit\" >\n      <div class=\"movie-submit\">\n       <label for=\"name\">Film name: </label>\n       <input type=\"text\" name=\"name\" id=\"newTitle\"\n\n       required></input>\n      </div>\n      <div class=\"movie-submit\">\n        <label for=\"year\">Year: </label>\n        <input type=\"year\"\n\n        name=\"year\" id=\"newYear\" required></input>\n       </div>\n  <div class=\"movie-submit\">\n    <label for=\"genre\">Genre: </label>\n    <input type=\"text\"\n    name=\"genre\" id=\"newGenre\" required></input>\n  </div>\n  <div class=\"movie-submit\">\n    <input type=\"submit\" value=\"Add Film\" onClick={this.handleSubmit}>\n    </input>\n  </div>\n\n</form>\n</div>\n\n\n    <a>\n      <button onClick = {this.selectRandom}>Select Random</button>\n    </a>\n      <MovieEntry\n      name={this.state.randomMovie.name}\n      year={this.state.randomMovie.year}\n      genre={this.state.randomMovie.genre}\n        />\n      <div>\n        <MovieList list={this.state.movies} />\n      </div>\n\n</div>\n  );\n  }\n}\n\nexport default App;\n","/home/nwhaley/Workspace/movieLibrary/movielibrary/src/components/movieList.jsx",["24"],"import React from 'react';\nimport MovieEntry from './movieEntry.jsx';\n\n\n\nclass MovieList extends React.Component {\n  constructor(props){\n    super(props)\n\n\n\n\n  }\n\n\n  render(){\n\n\n    return(\n\n      <div>\n    {this.props.list.map((movie) => (\n        <MovieEntry name={movie.name} year={movie.year} genre={movie.genre} />\n    ))}\n    </div>\n    )\n  }\n\n\n\n}\n\nexport default MovieList\n\n","/home/nwhaley/Workspace/movieLibrary/movielibrary/src/components/movieEntry.jsx",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":175,"column":5,"nodeType":"31","endLine":175,"endColumn":8},{"ruleId":"32","severity":1,"message":"33","line":7,"column":3,"nodeType":"34","messageId":"35","endLine":13,"endColumn":4},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]